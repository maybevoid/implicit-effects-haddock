[{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:EffSpec\">EffSpec</a> (sig :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Operation\">Operation</a> sig = (ops :: (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> ops -&gt; sig</li><li><span class=\"keyword\">type</span> <a href=\"#t:CoOperation\">CoOperation</a> sig = (coop :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> coop -&gt; sig</li></ul>","name":"EffSpec Operation CoOperation","module":"Control.Effect.Implicit.Base.EffSpec","link":"Control-Effect-Implicit-Base-EffSpec.html#t:EffSpec"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Effect\">Effect</a> eff = <a href=\"../base-4.12.0.0/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> eff","name":"Effect","module":"Control.Effect.Implicit.Base.Effect","link":"Control-Effect-Implicit-Base-Effect.html#t:Effect"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:EffFunctor\">EffFunctor</a> (comp :: (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:effmap\">effmap</a> :: <span class=\"keyword\">forall</span> eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2) =&gt; (<span class=\"keyword\">forall</span> x. eff1 x -&gt; eff2 x) -&gt; comp eff1 -&gt; comp eff2</li></ul>","name":"EffFunctor effmap","module":"Control.Effect.Implicit.Base.EffFunctor","link":"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:EffSpec\" title=\"Control.Effect.Implicit.Base.EffSpec\">EffSpec</a> ops, <a href=\"../base-4.12.0.0/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (<a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> ops), <a href=\"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base.EffFunctor\">EffFunctor</a> (<a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops)) =&gt; <a href=\"#t:FreeOps\">FreeOps</a> (ops :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mkFreeOps\">mkFreeOps</a> :: <span class=\"keyword\">forall</span> t eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> (t eff)) =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> ops a -&gt; t eff a) -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops (t eff)</li></ul>","name":"FreeOps mkFreeOps","module":"Control.Effect.Implicit.Base.FreeOps","link":"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:EffSpec\" title=\"Control.Effect.Implicit.Base.EffSpec\">EffSpec</a> ops =&gt; <a href=\"#t:ImplicitOps\">ImplicitOps</a> ops <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:OpsConstraint\">OpsConstraint</a> ops (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (c :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) <span class=\"keyword\">|</span> c -&gt; ops eff</li><li><a href=\"#v:withOps\">withOps</a> :: <span class=\"keyword\">forall</span> eff r. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops eff -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops eff =&gt; r) -&gt; r</li><li><a href=\"#v:captureOps\">captureOps</a> :: <span class=\"keyword\">forall</span> eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops eff</li></ul>","name":"ImplicitOps OpsConstraint withOps captureOps","module":"Control.Effect.Implicit.Base.Implicit","link":"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:EffConstraint\">EffConstraint</a> ops eff = (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops eff)","name":"EffConstraint","module":"Control.Effect.Implicit.Base.Implicit","link":"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops, <a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops) =&gt; <a href=\"#t:EffOps\">EffOps</a> ops","name":"EffOps","module":"Control.Effect.Implicit.Base.EffOps","link":"Control-Effect-Implicit-Base-EffOps.html#t:EffOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LiftEff\">LiftEff</a> (eff1 :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (eff2 :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"LiftEff","module":"Control.Effect.Implicit.Base.LiftEff","link":"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff"},{"display_html":"<a href=\"#v:idLift\">idLift</a> :: <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff eff","name":"idLift","module":"Control.Effect.Implicit.Base.LiftEff","link":"Control-Effect-Implicit-Base-LiftEff.html#v:idLift"},{"display_html":"<a href=\"#v:mkLiftEff\">mkLiftEff</a> :: <span class=\"keyword\">forall</span> eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2) =&gt; (<span class=\"keyword\">forall</span> x. eff1 x -&gt; eff2 x) -&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2","name":"mkLiftEff","module":"Control.Effect.Implicit.Base.LiftEff","link":"Control-Effect-Implicit-Base-LiftEff.html#v:mkLiftEff"},{"display_html":"<a href=\"#v:liftEff\">liftEff</a> :: <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <span class=\"keyword\">forall</span> x. eff1 x -&gt; eff2 x","name":"liftEff","module":"Control.Effect.Implicit.Base.LiftEff","link":"Control-Effect-Implicit-Base-LiftEff.html#v:liftEff"},{"display_html":"<a href=\"#v:applyEffmap\">applyEffmap</a> :: <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <span class=\"keyword\">forall</span> comp. <a href=\"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base.EffFunctor\">EffFunctor</a> comp =&gt; comp eff1 -&gt; comp eff2","name":"applyEffmap","module":"Control.Effect.Implicit.Base.LiftEff","link":"Control-Effect-Implicit-Base-LiftEff.html#v:applyEffmap"},{"display_html":"<a href=\"#v:joinLift\">joinLift</a> :: <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <span class=\"keyword\">forall</span> eff3. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff3 =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff2 eff3 -&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff3","name":"joinLift","module":"Control.Effect.Implicit.Base.LiftEff","link":"Control-Effect-Implicit-Base-LiftEff.html#v:joinLift"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NoEff\">NoEff</a>","name":"NoEff","module":"Control.Effect.Implicit.Base.NoEff","link":"Control-Effect-Implicit-Base-NoEff.html#t:NoEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NoOp\">NoOp</a> (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"#v:NoOp\">NoOp</a>","name":"NoOp NoOp","module":"Control.Effect.Implicit.Base.NoEff","link":"Control-Effect-Implicit-Base-NoEff.html#t:NoOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NoCoOp\">NoCoOp</a> r = <a href=\"#v:NoCoOp\">NoCoOp</a>","name":"NoCoOp NoCoOp","module":"Control.Effect.Implicit.Base.NoEff","link":"Control-Effect-Implicit-Base-NoEff.html#t:NoCoOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:NoConstraint\">NoConstraint</a> (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"NoConstraint","module":"Control.Effect.Implicit.Base.NoEff","link":"Control-Effect-Implicit-Base-NoEff.html#t:NoConstraint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Union\">Union</a> ops1 ops2","name":"Union","module":"Control.Effect.Implicit.Base.Union","link":"Control-Effect-Implicit-Base-Union.html#t:Union"},{"display_html":"<a href=\"#v:-8746-\">(&#8746;)</a> :: <span class=\"keyword\">forall</span> ops1 ops2 eff. ops1 eff -&gt; ops2 eff -&gt; <a href=\"Control-Effect-Implicit-Base-Union.html#t:UnionOps\" title=\"Control.Effect.Implicit.Base.Union\">UnionOps</a> ops1 ops2 eff","name":"∪","module":"Control.Effect.Implicit.Base.Union","link":"Control-Effect-Implicit-Base-Union.html#v:-8746-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnionOps\">UnionOps</a> ops1 ops2 (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"#v:UnionOps\">UnionOps</a> (ops1 eff) (ops2 eff)","name":"UnionOps UnionOps","module":"Control.Effect.Implicit.Base.Union","link":"Control-Effect-Implicit-Base-Union.html#t:UnionOps"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-8746-\">(&#8746;)</a> = <a href=\"Control-Effect-Implicit-Base-Union.html#t:Union\" title=\"Control.Effect.Implicit.Base.Union\">Union</a>","name":"∪","module":"Control.Effect.Implicit.Base.Union","link":"Control-Effect-Implicit-Base-Union.html#t:-8746-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnionCoOp\">UnionCoOp</a> ops1 ops2 r<ul class=\"subs\"><li>= <a href=\"#v:LeftCoOp\">LeftCoOp</a> (ops1 r)</li><li>| <a href=\"#v:RightCoOp\">RightCoOp</a> (ops2 r)</li></ul>","name":"UnionCoOp LeftCoOp RightCoOp","module":"Control.Effect.Implicit.Base.Union","link":"Control-Effect-Implicit-Base-Union.html#t:UnionCoOp"},{"display_html":"<a href=\"#v:leftOps\">leftOps</a> :: <span class=\"keyword\">forall</span> ops1 ops2 eff. <a href=\"Control-Effect-Implicit-Base-Union.html#t:UnionOps\" title=\"Control.Effect.Implicit.Base.Union\">UnionOps</a> ops1 ops2 eff -&gt; ops1 eff","name":"leftOps","module":"Control.Effect.Implicit.Base.Union","link":"Control-Effect-Implicit-Base-Union.html#v:leftOps"},{"display_html":"<a href=\"#v:rightOps\">rightOps</a> :: <span class=\"keyword\">forall</span> ops1 ops2 eff. <a href=\"Control-Effect-Implicit-Base-Union.html#t:UnionOps\" title=\"Control.Effect.Implicit.Base.Union\">UnionOps</a> ops1 ops2 eff -&gt; ops2 eff","name":"rightOps","module":"Control.Effect.Implicit.Base.Union","link":"Control-Effect-Implicit-Base-Union.html#v:rightOps"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Effect\">Effect</a> eff = <a href=\"../base-4.12.0.0/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> eff","name":"Effect","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:Effect"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:EffFunctor\">EffFunctor</a> (comp :: (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:effmap\">effmap</a> :: <span class=\"keyword\">forall</span> eff1 eff2. (<a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff2) =&gt; (<span class=\"keyword\">forall</span> x. eff1 x -&gt; eff2 x) -&gt; comp eff1 -&gt; comp eff2</li></ul>","name":"EffFunctor effmap","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:EffFunctor"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:EffSpec\">EffSpec</a> (sig :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Operation\">Operation</a> sig = (ops :: (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> ops -&gt; sig</li><li><span class=\"keyword\">type</span> <a href=\"#t:CoOperation\">CoOperation</a> sig = (coop :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> coop -&gt; sig</li></ul>","name":"EffSpec Operation CoOperation","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:EffSpec"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Control-Effect-Implicit-Base.html#t:EffSpec\" title=\"Control.Effect.Implicit.Base\">EffSpec</a> ops =&gt; <a href=\"#t:ImplicitOps\">ImplicitOps</a> ops <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:OpsConstraint\">OpsConstraint</a> ops (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (c :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) <span class=\"keyword\">|</span> c -&gt; ops eff</li><li><a href=\"#v:withOps\">withOps</a> :: <span class=\"keyword\">forall</span> eff r. <a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base.html#t:Operation\" title=\"Control.Effect.Implicit.Base\">Operation</a> ops eff -&gt; (<a href=\"Control-Effect-Implicit-Base.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base\">OpsConstraint</a> ops eff =&gt; r) -&gt; r</li><li><a href=\"#v:captureOps\">captureOps</a> :: <span class=\"keyword\">forall</span> eff. (<a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base\">OpsConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Base.html#t:Operation\" title=\"Control.Effect.Implicit.Base\">Operation</a> ops eff</li></ul>","name":"ImplicitOps OpsConstraint withOps captureOps","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:ImplicitOps"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Control-Effect-Implicit-Base.html#t:EffSpec\" title=\"Control.Effect.Implicit.Base\">EffSpec</a> ops, <a href=\"../base-4.12.0.0/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (<a href=\"Control-Effect-Implicit-Base.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base\">CoOperation</a> ops), <a href=\"Control-Effect-Implicit-Base.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base\">EffFunctor</a> (<a href=\"Control-Effect-Implicit-Base.html#t:Operation\" title=\"Control.Effect.Implicit.Base\">Operation</a> ops)) =&gt; <a href=\"#t:FreeOps\">FreeOps</a> (ops :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mkFreeOps\">mkFreeOps</a> :: <span class=\"keyword\">forall</span> t eff. (<a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> (t eff)) =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Base.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base\">CoOperation</a> ops a -&gt; t eff a) -&gt; <a href=\"Control-Effect-Implicit-Base.html#t:Operation\" title=\"Control.Effect.Implicit.Base\">Operation</a> ops (t eff)</li></ul>","name":"FreeOps mkFreeOps","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:FreeOps"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Control-Effect-Implicit-Base.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base\">ImplicitOps</a> ops, <a href=\"Control-Effect-Implicit-Base.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base\">FreeOps</a> ops) =&gt; <a href=\"#t:EffOps\">EffOps</a> ops","name":"EffOps","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:EffOps"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:EffConstraint\">EffConstraint</a> ops eff = (<a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base\">OpsConstraint</a> ops eff)","name":"EffConstraint","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:EffConstraint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NoEff\">NoEff</a>","name":"NoEff","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:NoEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Union\">Union</a> ops1 ops2","name":"Union","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:Union"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LiftEff\">LiftEff</a> (eff1 :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (eff2 :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"LiftEff","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:LiftEff"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-8746-\">(&#8746;)</a> = <a href=\"Control-Effect-Implicit-Base.html#t:Union\" title=\"Control.Effect.Implicit.Base\">Union</a>","name":"∪","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:-8746-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NoOp\">NoOp</a> (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"#v:NoOp\">NoOp</a>","name":"NoOp NoOp","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:NoOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NoCoOp\">NoCoOp</a> r = <a href=\"#v:NoCoOp\">NoCoOp</a>","name":"NoCoOp NoCoOp","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:NoCoOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:NoConstraint\">NoConstraint</a> (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"NoConstraint","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:NoConstraint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnionOps\">UnionOps</a> ops1 ops2 (eff :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"#v:UnionOps\">UnionOps</a> (ops1 eff) (ops2 eff)","name":"UnionOps UnionOps","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:UnionOps"},{"display_html":"<a href=\"#v:-8746-\">(&#8746;)</a> :: <span class=\"keyword\">forall</span> ops1 ops2 eff. ops1 eff -&gt; ops2 eff -&gt; <a href=\"Control-Effect-Implicit-Base.html#t:UnionOps\" title=\"Control.Effect.Implicit.Base\">UnionOps</a> ops1 ops2 eff","name":"∪","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:-8746-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnionCoOp\">UnionCoOp</a> ops1 ops2 r<ul class=\"subs\"><li>= <a href=\"#v:LeftCoOp\">LeftCoOp</a> (ops1 r)</li><li>| <a href=\"#v:RightCoOp\">RightCoOp</a> (ops2 r)</li></ul>","name":"UnionCoOp LeftCoOp RightCoOp","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#t:UnionCoOp"},{"display_html":"<a href=\"#v:leftOps\">leftOps</a> :: <span class=\"keyword\">forall</span> ops1 ops2 eff. <a href=\"Control-Effect-Implicit-Base.html#t:UnionOps\" title=\"Control.Effect.Implicit.Base\">UnionOps</a> ops1 ops2 eff -&gt; ops1 eff","name":"leftOps","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:leftOps"},{"display_html":"<a href=\"#v:rightOps\">rightOps</a> :: <span class=\"keyword\">forall</span> ops1 ops2 eff. <a href=\"Control-Effect-Implicit-Base.html#t:UnionOps\" title=\"Control.Effect.Implicit.Base\">UnionOps</a> ops1 ops2 eff -&gt; ops2 eff","name":"rightOps","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:rightOps"},{"display_html":"<a href=\"#v:idLift\">idLift</a> :: <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base\">LiftEff</a> eff eff","name":"idLift","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:idLift"},{"display_html":"<a href=\"#v:mkLiftEff\">mkLiftEff</a> :: <span class=\"keyword\">forall</span> eff1 eff2. (<a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff2) =&gt; (<span class=\"keyword\">forall</span> x. eff1 x -&gt; eff2 x) -&gt; <a href=\"Control-Effect-Implicit-Base.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base\">LiftEff</a> eff1 eff2","name":"mkLiftEff","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:mkLiftEff"},{"display_html":"<a href=\"#v:liftEff\">liftEff</a> :: <a href=\"Control-Effect-Implicit-Base.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base\">LiftEff</a> eff1 eff2 -&gt; <span class=\"keyword\">forall</span> x. eff1 x -&gt; eff2 x","name":"liftEff","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:liftEff"},{"display_html":"<a href=\"#v:applyEffmap\">applyEffmap</a> :: <a href=\"Control-Effect-Implicit-Base.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base\">LiftEff</a> eff1 eff2 -&gt; <span class=\"keyword\">forall</span> comp. <a href=\"Control-Effect-Implicit-Base.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base\">EffFunctor</a> comp =&gt; comp eff1 -&gt; comp eff2","name":"applyEffmap","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:applyEffmap"},{"display_html":"<a href=\"#v:joinLift\">joinLift</a> :: <a href=\"Control-Effect-Implicit-Base.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base\">LiftEff</a> eff1 eff2 -&gt; <span class=\"keyword\">forall</span> eff3. <a href=\"Control-Effect-Implicit-Base.html#t:Effect\" title=\"Control.Effect.Implicit.Base\">Effect</a> eff3 =&gt; <a href=\"Control-Effect-Implicit-Base.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base\">LiftEff</a> eff2 eff3 -&gt; <a href=\"Control-Effect-Implicit-Base.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base\">LiftEff</a> eff1 eff3","name":"joinLift","module":"Control.Effect.Implicit.Base","link":"Control-Effect-Implicit-Base.html#v:joinLift"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Computation\">Computation</a> ops comp eff1 = <a href=\"#v:Computation\">Computation</a> {<ul class=\"subs\"><li><a href=\"#v:runComp\">runComp</a> :: <span class=\"keyword\">forall</span> eff2. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2) =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops eff2 -&gt; comp eff2</li></ul>}","name":"Computation Computation runComp","module":"Control.Effect.Implicit.Computation.Computation","link":"Control-Effect-Implicit-Computation-Computation.html#t:Computation"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Handler\">Handler</a> ops handler eff = <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler) eff","name":"Handler","module":"Control.Effect.Implicit.Computation.Computation","link":"Control-Effect-Implicit-Computation-Computation.html#t:Handler"},{"display_html":"<a href=\"#v:liftComputation\">liftComputation</a> :: <span class=\"keyword\">forall</span> ops comp eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2) =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops comp eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops comp eff2","name":"liftComputation","module":"Control.Effect.Implicit.Computation.Computation","link":"Control-Effect-Implicit-Computation-Computation.html#v:liftComputation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Cast\">Cast</a> p = p =&gt; <a href=\"#v:Cast\">Cast</a>","name":"Cast Cast","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#t:Cast"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OpsCast\">OpsCast</a> ops1 ops2 = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops1 eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:Cast\" title=\"Control.Effect.Implicit.Computation.Cast\">Cast</a> (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops2 eff)","name":"OpsCast","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#t:OpsCast"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-8839-\">(&#8839;)</a> ops1 ops2 = <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:OpsCast\" title=\"Control.Effect.Implicit.Computation.Cast\">OpsCast</a> ops1 ops2","name":"⊇","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#t:-8839-"},{"display_html":"<a href=\"#v:cast\">cast</a> :: <span class=\"keyword\">forall</span> p. p =&gt; <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:Cast\" title=\"Control.Effect.Implicit.Computation.Cast\">Cast</a> p","name":"cast","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#v:cast"},{"display_html":"<a href=\"#v:runCast\">runCast</a> :: <span class=\"keyword\">forall</span> eff ops1 ops2 r. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops1 eff =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops2 eff =&gt; r) -&gt; r","name":"runCast","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#v:runCast"},{"display_html":"<a href=\"#v:castOps\">castOps</a> :: <span class=\"keyword\">forall</span> eff ops1 ops2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops2) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops1 eff -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops2 eff","name":"castOps","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#v:castOps"},{"display_html":"<a href=\"#v:extendCast\">extendCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3. (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops3) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; (ops1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> (ops2 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3)","name":"extendCast","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#v:extendCast"},{"display_html":"<a href=\"#v:composeCast\">composeCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3. (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops3) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; (ops2 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops3) -&gt; ops1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops3","name":"composeCast","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#v:composeCast"},{"display_html":"<a href=\"#v:castComputation\">castComputation</a> :: <span class=\"keyword\">forall</span> ops1 ops2 comp eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops2 comp eff -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 comp eff","name":"castComputation","module":"Control.Effect.Implicit.Computation.Cast","link":"Control-Effect-Implicit-Computation-Cast.html#v:castComputation"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BaseHandler\">BaseHandler</a> handler eff = <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> <a href=\"Control-Effect-Implicit-Base-NoEff.html#t:NoEff\" title=\"Control.Effect.Implicit.Base.NoEff\">NoEff</a> handler eff","name":"BaseHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#t:BaseHandler"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericHandler\">GenericHandler</a> ops handler = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops handler eff","name":"GenericHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#t:GenericHandler"},{"display_html":"<a href=\"#v:mkHandler\">mkHandler</a> :: <span class=\"keyword\">forall</span> ops handler eff1. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1) =&gt; (<span class=\"keyword\">forall</span> eff2. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff2 =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler eff2) -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops handler eff1","name":"mkHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:mkHandler"},{"display_html":"<a href=\"#v:withHandler\">withHandler</a> :: <span class=\"keyword\">forall</span> ops handler eff r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops handler eff -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> handler eff =&gt; r) -&gt; r","name":"withHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:withHandler"},{"display_html":"<a href=\"#v:baseHandler\">baseHandler</a> :: <span class=\"keyword\">forall</span> handler eff. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler eff -&gt; <a href=\"Control-Effect-Implicit-Computation-Handler.html#t:BaseHandler\" title=\"Control.Effect.Implicit.Computation.Handler\">BaseHandler</a> handler eff","name":"baseHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:baseHandler"},{"display_html":"<a href=\"#v:genericHandler\">genericHandler</a> :: <span class=\"keyword\">forall</span> ops handler. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; (<span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler eff) -&gt; <a href=\"Control-Effect-Implicit-Computation-Handler.html#t:GenericHandler\" title=\"Control.Effect.Implicit.Computation.Handler\">GenericHandler</a> ops handler","name":"genericHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:genericHandler"},{"display_html":"<a href=\"#v:bindExactHandler\">bindExactHandler</a> :: <span class=\"keyword\">forall</span> ops handler eff1 comp. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops handler eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) comp eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops comp eff1","name":"bindExactHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:bindExactHandler"},{"display_html":"<a href=\"#v:composeExactHandlers\">composeExactHandlers</a> :: <span class=\"keyword\">forall</span> ops handler1 handler2 eff1. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops handler1 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) handler2 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) eff1","name":"composeExactHandlers","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:composeExactHandlers"},{"display_html":"<a href=\"#v:castHandler\">castHandler</a> :: <span class=\"keyword\">forall</span> ops1 ops2 handler eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops2 handler eff -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops1 handler eff","name":"castHandler","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:castHandler"},{"display_html":"<a href=\"#v:composeHandlersWithCast\">composeHandlersWithCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3 handler1 handler2 eff. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops1) -&gt; ((handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops1 handler1 eff -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops2 handler2 eff -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops3 (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) eff","name":"composeHandlersWithCast","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:composeHandlersWithCast"},{"display_html":"<a href=\"#v:bindHandlerWithCast\">bindHandlerWithCast</a> :: <span class=\"keyword\">forall</span> ops3 ops1 ops2 handler eff r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops1) -&gt; ((handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops1 handler eff -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops2 r eff -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops3 r eff","name":"bindHandlerWithCast","module":"Control.Effect.Implicit.Computation.Handler","link":"Control-Effect-Implicit-Computation-Handler.html#v:bindHandlerWithCast"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Pipeline\">Pipeline</a> ops1 handler comp1 comp2 eff1 eff2 = <a href=\"#v:Pipeline\">Pipeline</a> {<ul class=\"subs\"><li><a href=\"#v:runPipeline\">runPipeline</a> :: <span class=\"keyword\">forall</span> ops2. <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2 =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops2) comp1 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (ops1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops2) comp2 eff2</li></ul>}","name":"Pipeline Pipeline runPipeline","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TransformerHandler\">TransformerHandler</a> t handler eff = <a href=\"#v:TransformerHandler\">TransformerHandler</a> {<ul class=\"subs\"><li><a href=\"#v:tCoOpHandler\">tCoOpHandler</a> :: <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler (t eff)</li><li><a href=\"#v:tLiftEff\">tLiftEff</a> :: <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff (t eff)</li><li><a href=\"#v:tUnliftEff\">tUnliftEff</a> :: <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> (t eff) eff</li></ul>}","name":"TransformerHandler TransformerHandler tCoOpHandler tLiftEff tUnliftEff","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#t:TransformerHandler"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SimplePipeline\">SimplePipeline</a> ops handler comp eff = <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops handler comp comp eff eff","name":"SimplePipeline","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#t:SimplePipeline"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericPipeline\">GenericPipeline</a> ops handler eff = <span class=\"keyword\">forall</span> comp. <a href=\"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base.EffFunctor\">EffFunctor</a> comp =&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:SimplePipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">SimplePipeline</a> ops handler comp eff","name":"GenericPipeline","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#t:GenericPipeline"},{"display_html":"<a href=\"#v:handlerToPipeline\">handlerToPipeline</a> :: <span class=\"keyword\">forall</span> ops1 handler eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> ops1 handler eff -&gt; <span class=\"keyword\">forall</span> comp. <a href=\"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base.EffFunctor\">EffFunctor</a> comp =&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:SimplePipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">SimplePipeline</a> ops1 handler comp eff","name":"handlerToPipeline","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#v:handlerToPipeline"},{"display_html":"<a href=\"#v:transformerPipeline\">transformerPipeline</a> :: <span class=\"keyword\">forall</span> t ops1 handler eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> (t eff)) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:TransformerHandler\" title=\"Control.Effect.Implicit.Computation.Pipeline\">TransformerHandler</a> t handler) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:GenericPipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">GenericPipeline</a> ops1 handler eff1","name":"transformerPipeline","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#v:transformerPipeline"},{"display_html":"<a href=\"#v:castPipelineOps\">castPipelineOps</a> :: <span class=\"keyword\">forall</span> ops1 ops2 handler comp1 comp2 eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; (ops2 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops1) -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops1 handler comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops2 handler comp1 comp2 eff1 eff2","name":"castPipelineOps","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#v:castPipelineOps"},{"display_html":"<a href=\"#v:castPipelineHandler\">castPipelineHandler</a> :: <span class=\"keyword\">forall</span> ops1 handler1 handler2 comp1 comp2 eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2) =&gt; (handler1 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> handler2) -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops1 handler1 comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops1 handler2 comp1 comp2 eff1 eff2","name":"castPipelineHandler","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#v:castPipelineHandler"},{"display_html":"<a href=\"#v:composePipelines\">composePipelines</a> :: <span class=\"keyword\">forall</span> ops1 ops2 handler1 handler2 comp1 comp2 comp3 eff1 eff2 eff3. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2) =&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> (handler2 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops1) handler1 comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops2 handler2 comp2 comp3 eff2 eff3 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> (ops1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops2) (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) comp1 comp3 eff1 eff3","name":"composePipelines","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#v:composePipelines"},{"display_html":"<a href=\"#v:runPipelineWithCast\">runPipelineWithCast</a> :: <span class=\"keyword\">forall</span> ops3 ops1 ops2 handler comp1 comp2 eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops1) -&gt; ((handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops1 handler comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops2 comp1 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops3 comp2 eff2","name":"runPipelineWithCast","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#v:runPipelineWithCast"},{"display_html":"<a href=\"#v:composePipelinesWithCast\">composePipelinesWithCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3 handler1 handler2 handler3 comp1 comp2 comp3 eff1 eff2 eff3. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler3) =&gt; ((handler2 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops1) -&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> ops2) -&gt; ((handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) <a href=\"Control-Effect-Implicit-Computation-Cast.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation.Cast\">&#8839;</a> handler3) -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops1 handler1 comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops2 handler2 comp2 comp3 eff2 eff3 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops3 handler3 comp1 comp3 eff1 eff3","name":"composePipelinesWithCast","module":"Control.Effect.Implicit.Computation.Pipeline","link":"Control-Effect-Implicit-Computation-Pipeline.html#v:composePipelinesWithCast"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Return\">Return</a> a eff = <a href=\"#v:Return\">Return</a> {<ul class=\"subs\"><li><a href=\"#v:returnVal\">returnVal</a> :: eff a</li></ul>}","name":"Return Return returnVal","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#t:Return"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericReturn\">GenericReturn</a> ops a = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) eff","name":"GenericReturn","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#t:GenericReturn"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericComputation\">GenericComputation</a> ops comp = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops comp eff","name":"GenericComputation","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#t:GenericComputation"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IdentityComputation\">IdentityComputation</a> a = <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> <a href=\"Control-Effect-Implicit-Base-NoEff.html#t:NoEff\" title=\"Control.Effect.Implicit.Base.NoEff\">NoEff</a> (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) <a href=\"../base-4.12.0.0/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a>","name":"IdentityComputation","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#t:IdentityComputation"},{"display_html":"<a href=\"#v:returnComputation\">returnComputation</a> :: <span class=\"keyword\">forall</span> ops a eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops) =&gt; (<span class=\"keyword\">forall</span> eff2. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff2 =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; eff2 a) -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) eff1","name":"returnComputation","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#v:returnComputation"},{"display_html":"<a href=\"#v:genericComputation\">genericComputation</a> :: <span class=\"keyword\">forall</span> ops comp. <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops =&gt; (<span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff =&gt; comp eff) -&gt; <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops comp eff","name":"genericComputation","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#v:genericComputation"},{"display_html":"<a href=\"#v:genericReturn\">genericReturn</a> :: <span class=\"keyword\">forall</span> ops a. <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops =&gt; (<span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff =&gt; eff a) -&gt; <a href=\"Control-Effect-Implicit-Computation-Value.html#t:GenericReturn\" title=\"Control.Effect.Implicit.Computation.Value\">GenericReturn</a> ops a","name":"genericReturn","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#v:genericReturn"},{"display_html":"<a href=\"#v:runIdentityComp\">runIdentityComp</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Computation-Value.html#t:IdentityComputation\" title=\"Control.Effect.Implicit.Computation.Value\">IdentityComputation</a> a -&gt; a","name":"runIdentityComp","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#v:runIdentityComp"},{"display_html":"<a href=\"#v:execComp\">execComp</a> :: <span class=\"keyword\">forall</span> ops eff a. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) eff -&gt; eff a","name":"execComp","module":"Control.Effect.Implicit.Computation.Value","link":"Control-Effect-Implicit-Computation-Value.html#v:execComp"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Computation\">Computation</a> ops comp eff1 = <a href=\"#v:Computation\">Computation</a> {<ul class=\"subs\"><li><a href=\"#v:runComp\">runComp</a> :: <span class=\"keyword\">forall</span> eff2. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2) =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops eff2 -&gt; comp eff2</li></ul>}","name":"Computation Computation runComp","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:Computation"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Handler\">Handler</a> ops handler eff = <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler) eff","name":"Handler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:Handler"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Return\">Return</a> a eff = <a href=\"#v:Return\">Return</a> {<ul class=\"subs\"><li><a href=\"#v:returnVal\">returnVal</a> :: eff a</li></ul>}","name":"Return Return returnVal","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:Return"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Pipeline\">Pipeline</a> ops1 handler comp1 comp2 eff1 eff2 = <a href=\"#v:Pipeline\">Pipeline</a> {<ul class=\"subs\"><li><a href=\"#v:runPipeline\">runPipeline</a> :: <span class=\"keyword\">forall</span> ops2. <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2 =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> (handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops2) comp1 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> (ops1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops2) comp2 eff2</li></ul>}","name":"Pipeline Pipeline runPipeline","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:Pipeline"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TransformerHandler\">TransformerHandler</a> t handler eff = <a href=\"#v:TransformerHandler\">TransformerHandler</a> {<ul class=\"subs\"><li><a href=\"#v:tCoOpHandler\">tCoOpHandler</a> :: <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler (t eff)</li><li><a href=\"#v:tLiftEff\">tLiftEff</a> :: <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff (t eff)</li><li><a href=\"#v:tUnliftEff\">tUnliftEff</a> :: <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> (t eff) eff</li></ul>}","name":"TransformerHandler TransformerHandler tCoOpHandler tLiftEff tUnliftEff","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:TransformerHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Cast\">Cast</a> p = p =&gt; <a href=\"#v:Cast\">Cast</a>","name":"Cast Cast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:Cast"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OpsCast\">OpsCast</a> ops1 ops2 = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops1 eff =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Cast\" title=\"Control.Effect.Implicit.Computation\">Cast</a> (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops2 eff)","name":"OpsCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:OpsCast"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-8839-\">(&#8839;)</a> ops1 ops2 = <a href=\"Control-Effect-Implicit-Computation.html#t:OpsCast\" title=\"Control.Effect.Implicit.Computation\">OpsCast</a> ops1 ops2","name":"⊇","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:-8839-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericReturn\">GenericReturn</a> ops a = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Computation.html#t:Return\" title=\"Control.Effect.Implicit.Computation\">Return</a> a) eff","name":"GenericReturn","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:GenericReturn"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericComputation\">GenericComputation</a> ops comp = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops comp eff","name":"GenericComputation","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:GenericComputation"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IdentityComputation\">IdentityComputation</a> a = <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> <a href=\"Control-Effect-Implicit-Base-NoEff.html#t:NoEff\" title=\"Control.Effect.Implicit.Base.NoEff\">NoEff</a> (<a href=\"Control-Effect-Implicit-Computation.html#t:Return\" title=\"Control.Effect.Implicit.Computation\">Return</a> a) <a href=\"../base-4.12.0.0/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a>","name":"IdentityComputation","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:IdentityComputation"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BaseHandler\">BaseHandler</a> handler eff = <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> <a href=\"Control-Effect-Implicit-Base-NoEff.html#t:NoEff\" title=\"Control.Effect.Implicit.Base.NoEff\">NoEff</a> handler eff","name":"BaseHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:BaseHandler"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericHandler\">GenericHandler</a> ops handler = <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops handler eff","name":"GenericHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:GenericHandler"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SimplePipeline\">SimplePipeline</a> ops handler comp eff = <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops handler comp comp eff eff","name":"SimplePipeline","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:SimplePipeline"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GenericPipeline\">GenericPipeline</a> ops handler eff = <span class=\"keyword\">forall</span> comp. <a href=\"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base.EffFunctor\">EffFunctor</a> comp =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:SimplePipeline\" title=\"Control.Effect.Implicit.Computation\">SimplePipeline</a> ops handler comp eff","name":"GenericPipeline","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#t:GenericPipeline"},{"display_html":"<a href=\"#v:returnComputation\">returnComputation</a> :: <span class=\"keyword\">forall</span> ops a eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops) =&gt; (<span class=\"keyword\">forall</span> eff2. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff2 =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; eff2 a) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Computation.html#t:Return\" title=\"Control.Effect.Implicit.Computation\">Return</a> a) eff1","name":"returnComputation","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:returnComputation"},{"display_html":"<a href=\"#v:genericComputation\">genericComputation</a> :: <span class=\"keyword\">forall</span> ops comp. <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops =&gt; (<span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff =&gt; comp eff) -&gt; <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops comp eff","name":"genericComputation","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:genericComputation"},{"display_html":"<a href=\"#v:genericReturn\">genericReturn</a> :: <span class=\"keyword\">forall</span> ops a. <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops =&gt; (<span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff =&gt; eff a) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:GenericReturn\" title=\"Control.Effect.Implicit.Computation\">GenericReturn</a> ops a","name":"genericReturn","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:genericReturn"},{"display_html":"<a href=\"#v:runIdentityComp\">runIdentityComp</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Computation.html#t:IdentityComputation\" title=\"Control.Effect.Implicit.Computation\">IdentityComputation</a> a -&gt; a","name":"runIdentityComp","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:runIdentityComp"},{"display_html":"<a href=\"#v:execComp\">execComp</a> :: <span class=\"keyword\">forall</span> ops eff a. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops (<a href=\"Control-Effect-Implicit-Computation.html#t:Return\" title=\"Control.Effect.Implicit.Computation\">Return</a> a) eff -&gt; eff a","name":"execComp","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:execComp"},{"display_html":"<a href=\"#v:liftComputation\">liftComputation</a> :: <span class=\"keyword\">forall</span> ops comp eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2) =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops comp eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops comp eff2","name":"liftComputation","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:liftComputation"},{"display_html":"<a href=\"#v:mkHandler\">mkHandler</a> :: <span class=\"keyword\">forall</span> ops handler eff1. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1) =&gt; (<span class=\"keyword\">forall</span> eff2. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff2 =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler eff2) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops handler eff1","name":"mkHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:mkHandler"},{"display_html":"<a href=\"#v:withHandler\">withHandler</a> :: <span class=\"keyword\">forall</span> ops handler eff r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops handler eff -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> handler eff =&gt; r) -&gt; r","name":"withHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:withHandler"},{"display_html":"<a href=\"#v:baseHandler\">baseHandler</a> :: <span class=\"keyword\">forall</span> handler eff. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler eff -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:BaseHandler\" title=\"Control.Effect.Implicit.Computation\">BaseHandler</a> handler eff","name":"baseHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:baseHandler"},{"display_html":"<a href=\"#v:genericHandler\">genericHandler</a> :: <span class=\"keyword\">forall</span> ops handler. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; (<span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> handler eff) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:GenericHandler\" title=\"Control.Effect.Implicit.Computation\">GenericHandler</a> ops handler","name":"genericHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:genericHandler"},{"display_html":"<a href=\"#v:bindExactHandler\">bindExactHandler</a> :: <span class=\"keyword\">forall</span> ops handler eff1 comp. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1) =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops handler eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> (handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) comp eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops comp eff1","name":"bindExactHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:bindExactHandler"},{"display_html":"<a href=\"#v:composeExactHandlers\">composeExactHandlers</a> :: <span class=\"keyword\">forall</span> ops handler1 handler2 eff1. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1) =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops handler1 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) handler2 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) eff1","name":"composeExactHandlers","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:composeExactHandlers"},{"display_html":"<a href=\"#v:handlerToPipeline\">handlerToPipeline</a> :: <span class=\"keyword\">forall</span> ops1 handler eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops1 handler eff -&gt; <span class=\"keyword\">forall</span> comp. <a href=\"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base.EffFunctor\">EffFunctor</a> comp =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:SimplePipeline\" title=\"Control.Effect.Implicit.Computation\">SimplePipeline</a> ops1 handler comp eff","name":"handlerToPipeline","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:handlerToPipeline"},{"display_html":"<a href=\"#v:transformerPipeline\">transformerPipeline</a> :: <span class=\"keyword\">forall</span> t ops1 handler eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <span class=\"keyword\">forall</span> eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> (t eff)) =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Computation.html#t:TransformerHandler\" title=\"Control.Effect.Implicit.Computation\">TransformerHandler</a> t handler) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:GenericPipeline\" title=\"Control.Effect.Implicit.Computation\">GenericPipeline</a> ops1 handler eff1","name":"transformerPipeline","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:transformerPipeline"},{"display_html":"<a href=\"#v:composePipelines\">composePipelines</a> :: <span class=\"keyword\">forall</span> ops1 ops2 handler1 handler2 comp1 comp2 comp3 eff1 eff2 eff3. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2) =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> (handler2 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops1) handler1 comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops2 handler2 comp2 comp3 eff2 eff3 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> (ops1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops2) (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) comp1 comp3 eff1 eff3","name":"composePipelines","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:composePipelines"},{"display_html":"<a href=\"#v:cast\">cast</a> :: <span class=\"keyword\">forall</span> p. p =&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Cast\" title=\"Control.Effect.Implicit.Computation\">Cast</a> p","name":"cast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:cast"},{"display_html":"<a href=\"#v:runCast\">runCast</a> :: <span class=\"keyword\">forall</span> eff ops1 ops2 r. <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops1 eff =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops2 eff =&gt; r) -&gt; r","name":"runCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:runCast"},{"display_html":"<a href=\"#v:castOps\">castOps</a> :: <span class=\"keyword\">forall</span> eff ops1 ops2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops2) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops1 eff -&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops2 eff","name":"castOps","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:castOps"},{"display_html":"<a href=\"#v:castComputation\">castComputation</a> :: <span class=\"keyword\">forall</span> ops1 ops2 comp eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops2 comp eff -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops1 comp eff","name":"castComputation","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:castComputation"},{"display_html":"<a href=\"#v:castHandler\">castHandler</a> :: <span class=\"keyword\">forall</span> ops1 ops2 handler eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops2 handler eff -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops1 handler eff","name":"castHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:castHandler"},{"display_html":"<a href=\"#v:bindHandlerWithCast\">bindHandlerWithCast</a> :: <span class=\"keyword\">forall</span> ops3 ops1 ops2 handler eff r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops1) -&gt; ((handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops1 handler eff -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops2 r eff -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops3 r eff","name":"bindHandlerWithCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:bindHandlerWithCast"},{"display_html":"<a href=\"#v:composeHandlersWithCast\">composeHandlersWithCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3 handler1 handler2 eff. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops1) -&gt; ((handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops1 handler1 eff -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops2 handler2 eff -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation\">Handler</a> ops3 (handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) eff","name":"composeHandlersWithCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:composeHandlersWithCast"},{"display_html":"<a href=\"#v:extendCast\">extendCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3. (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops3) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; (ops1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> (ops2 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3)","name":"extendCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:extendCast"},{"display_html":"<a href=\"#v:composeCast\">composeCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3. (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:ImplicitOps\" title=\"Control.Effect.Implicit.Base.Implicit\">ImplicitOps</a> ops3) =&gt; (ops1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; (ops2 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops3) -&gt; ops1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops3","name":"composeCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:composeCast"},{"display_html":"<a href=\"#v:runPipelineWithCast\">runPipelineWithCast</a> :: <span class=\"keyword\">forall</span> ops3 ops1 ops2 handler comp1 comp2 eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops1) -&gt; ((handler <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops1 handler comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops2 comp1 eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation\">Computation</a> ops3 comp2 eff2","name":"runPipelineWithCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:runPipelineWithCast"},{"display_html":"<a href=\"#v:castPipelineOps\">castPipelineOps</a> :: <span class=\"keyword\">forall</span> ops1 ops2 handler comp1 comp2 eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler) =&gt; (ops2 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops1) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops1 handler comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops2 handler comp1 comp2 eff1 eff2","name":"castPipelineOps","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:castPipelineOps"},{"display_html":"<a href=\"#v:castPipelineHandler\">castPipelineHandler</a> :: <span class=\"keyword\">forall</span> ops1 handler1 handler2 comp1 comp2 eff1 eff2. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2) =&gt; (handler1 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> handler2) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops1 handler1 comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops1 handler2 comp1 comp2 eff1 eff2","name":"castPipelineHandler","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:castPipelineHandler"},{"display_html":"<a href=\"#v:composePipelinesWithCast\">composePipelinesWithCast</a> :: <span class=\"keyword\">forall</span> ops1 ops2 ops3 handler1 handler2 handler3 comp1 comp2 comp3 eff1 eff2 eff3. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff2, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops3, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler2, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler3) =&gt; ((handler2 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops3) <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops1) -&gt; (ops3 <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> ops2) -&gt; ((handler1 <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> handler2) <a href=\"Control-Effect-Implicit-Computation.html#t:-8839-\" title=\"Control.Effect.Implicit.Computation\">&#8839;</a> handler3) -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops1 handler1 comp1 comp2 eff1 eff2 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops2 handler2 comp2 comp3 eff2 eff3 -&gt; <a href=\"Control-Effect-Implicit-Computation.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation\">Pipeline</a> ops3 handler3 comp1 comp3 eff1 eff3","name":"composePipelinesWithCast","module":"Control.Effect.Implicit.Computation","link":"Control-Effect-Implicit-Computation.html#v:composePipelinesWithCast"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> ops eff. (<a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"../base-4.12.0.0/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> (free ops eff)) =&gt; <a href=\"#t:FreeEff\">FreeEff</a> free <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:freeOps\">freeOps</a> :: <span class=\"keyword\">forall</span> ops eff. (<a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops (free ops eff)</li><li><a href=\"#v:liftFree\">liftFree</a> :: <span class=\"keyword\">forall</span> ops eff a. (<a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; eff a -&gt; free ops eff a</li><li><a href=\"#v:handleFree\">handleFree</a> :: <span class=\"keyword\">forall</span> ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops) =&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> ops a r eff -&gt; free ops eff a -&gt; eff r</li></ul>","name":"FreeEff freeOps liftFree handleFree","module":"Control.Effect.Implicit.Free.FreeEff","link":"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free =&gt; <a href=\"#t:FreerEff\">FreerEff</a> free <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:handleFreer\">handleFreer</a> :: <span class=\"keyword\">forall</span> ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops) =&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreerCoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreerCoOpHandler</a> ops a r eff -&gt; free ops eff a -&gt; eff r</li></ul>","name":"FreerEff handleFreer","module":"Control.Effect.Implicit.Free.FreeEff","link":"Control-Effect-Implicit-Free-FreeEff.html#t:FreerEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CoOpHandler\">CoOpHandler</a> handler a r eff = <a href=\"#v:CoOpHandler\">CoOpHandler</a> {<ul class=\"subs\"><li><a href=\"#v:handleFreeReturn\">handleFreeReturn</a> :: a -&gt; eff r</li><li><a href=\"#v:handleFreeCoOp\">handleFreeCoOp</a> :: <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> handler (eff r) -&gt; eff r</li></ul>}","name":"CoOpHandler CoOpHandler handleFreeReturn handleFreeCoOp","module":"Control.Effect.Implicit.Free.FreeEff","link":"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FreerCoOpHandler\">FreerCoOpHandler</a> handler a r eff = <a href=\"#v:FreerCoOpHandler\">FreerCoOpHandler</a> {<ul class=\"subs\"><li><a href=\"#v:handleFreerReturn\">handleFreerReturn</a> :: a -&gt; eff r</li><li><a href=\"#v:handleFreerCoOp\">handleFreerCoOp</a> :: <span class=\"keyword\">forall</span> x. <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> handler x -&gt; (x -&gt; eff r) -&gt; eff r</li></ul>}","name":"FreerCoOpHandler FreerCoOpHandler handleFreerReturn handleFreerCoOp","module":"Control.Effect.Implicit.Free.FreeEff","link":"Control-Effect-Implicit-Free-FreeEff.html#t:FreerCoOpHandler"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:GenericCoOpHandler\">GenericCoOpHandler</a> handler eff = <a href=\"#v:GenericCoOpHandler\">GenericCoOpHandler</a> (<span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> handler a a eff)","name":"GenericCoOpHandler GenericCoOpHandler","module":"Control.Effect.Implicit.Free.FreeEff","link":"Control-Effect-Implicit-Free-FreeEff.html#t:GenericCoOpHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ContextualHandler\">ContextualHandler</a> w handler eff = <a href=\"#v:ContextualHandler\">ContextualHandler</a> {<ul class=\"subs\"><li><a href=\"#v:runContextualHandler\">runContextualHandler</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> handler a (w eff a) eff</li><li><a href=\"#v:extractResult\">extractResult</a> :: <span class=\"keyword\">forall</span> a. w eff a -&gt; eff a</li></ul>}","name":"ContextualHandler ContextualHandler runContextualHandler extractResult","module":"Control.Effect.Implicit.Free.FreeEff","link":"Control-Effect-Implicit-Free-FreeEff.html#t:ContextualHandler"},{"display_html":"<a href=\"#v:freeLiftEff\">freeLiftEff</a> :: <span class=\"keyword\">forall</span> free ops eff. (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff (free ops eff)","name":"freeLiftEff","module":"Control.Effect.Implicit.Free.FreeEff","link":"Control-Effect-Implicit-Free-FreeEff.html#v:freeLiftEff"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreeMonad\">FreeMonad</a> ops eff a = <a href=\"#v:FreeMonad\">FreeMonad</a> {<ul class=\"subs\"><li><a href=\"#v:unFreeT\">unFreeT</a> :: <a href=\"../free-5.1/Control-Monad-Trans-Free.html#t:FreeT\" title=\"Control.Monad.Trans.Free\">FreeT</a> (<a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> ops) eff a</li></ul>}","name":"FreeMonad FreeMonad unFreeT","module":"Control.Effect.Implicit.Free.Free","link":"Control-Effect-Implicit-Free-Free.html#t:FreeMonad"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreerMonad\">FreerMonad</a> ops eff a = <a href=\"#v:FreerMonad\">FreerMonad</a> {<ul class=\"subs\"><li><a href=\"#v:runFreerMonad\">runFreerMonad</a> :: eff (<a href=\"Control-Effect-Implicit-Free-Freer.html#t:FreerF\" title=\"Control.Effect.Implicit.Free.Freer\">FreerF</a> ops a (<a href=\"Control-Effect-Implicit-Free-Freer.html#t:FreerMonad\" title=\"Control.Effect.Implicit.Free.Freer\">FreerMonad</a> ops eff a))</li></ul>}","name":"FreerMonad FreerMonad runFreerMonad","module":"Control.Effect.Implicit.Free.Freer","link":"Control-Effect-Implicit-Free-Freer.html#t:FreerMonad"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FreerF\">FreerF</a> ops a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:PureF\">PureF</a> :: <span class=\"keyword\">forall</span> ops a b. a -&gt; <a href=\"Control-Effect-Implicit-Free-Freer.html#t:FreerF\" title=\"Control.Effect.Implicit.Free.Freer\">FreerF</a> ops a b</li><li><a href=\"#v:FreeF\">FreeF</a> :: <span class=\"keyword\">forall</span> ops a b x. <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> ops x -&gt; (x -&gt; b) -&gt; <a href=\"Control-Effect-Implicit-Free-Freer.html#t:FreerF\" title=\"Control.Effect.Implicit.Free.Freer\">FreerF</a> ops a b</li></ul>","name":"FreerF FreeF PureF","module":"Control.Effect.Implicit.Free.Freer","link":"Control-Effect-Implicit-Free-Freer.html#t:FreerF"},{"display_html":"<a href=\"#v:withCoOpHandler\">withCoOpHandler</a> :: <span class=\"keyword\">forall</span> free handler eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> handler a r eff -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> handler (free handler eff) =&gt; free handler eff a) -&gt; eff r","name":"withCoOpHandler","module":"Control.Effect.Implicit.Free.Handler","link":"Control-Effect-Implicit-Free-Handler.html#v:withCoOpHandler"},{"display_html":"<a href=\"#v:withCoOpHandlerAndOps\">withCoOpHandlerAndOps</a> :: <span class=\"keyword\">forall</span> free ops handler eff a r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> handler a r eff -&gt; ((<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> handler (free handler eff), <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops (free handler eff)) =&gt; free handler eff a) -&gt; eff r","name":"withCoOpHandlerAndOps","module":"Control.Effect.Implicit.Free.Handler","link":"Control-Effect-Implicit-Free-Handler.html#v:withCoOpHandlerAndOps"},{"display_html":"<a href=\"#v:withFreerCoOpHandler\">withFreerCoOpHandler</a> :: <span class=\"keyword\">forall</span> free ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreerEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreerEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreerCoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreerCoOpHandler</a> ops a r eff -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops (free ops eff) =&gt; free ops eff a) -&gt; eff r","name":"withFreerCoOpHandler","module":"Control.Effect.Implicit.Free.Handler","link":"Control-Effect-Implicit-Free-Handler.html#v:withFreerCoOpHandler"},{"display_html":"<a href=\"#v:withContextualCoOpHandler\">withContextualCoOpHandler</a> :: <span class=\"keyword\">forall</span> free ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> ops a r eff -&gt; (r -&gt; eff a) -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops (free ops eff) =&gt; free ops eff a) -&gt; eff a","name":"withContextualCoOpHandler","module":"Control.Effect.Implicit.Free.Handler","link":"Control-Effect-Implicit-Free-Handler.html#v:withContextualCoOpHandler"},{"display_html":"<a href=\"#v:coopHandlerToPipeline\">coopHandlerToPipeline</a> :: <span class=\"keyword\">forall</span> free ops1 handler eff1 a b. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> handler a b) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops1 handler (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> b) eff1 eff1","name":"coopHandlerToPipeline","module":"Control.Effect.Implicit.Free.Pipeline","link":"Control-Effect-Implicit-Free-Pipeline.html#v:coopHandlerToPipeline"},{"display_html":"<a href=\"#v:genericCoOpHandlerToPipeline\">genericCoOpHandlerToPipeline</a> :: <span class=\"keyword\">forall</span> free ops1 handler eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:GenericCoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">GenericCoOpHandler</a> handler) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:GenericPipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">GenericPipeline</a> ops1 handler eff1","name":"genericCoOpHandlerToPipeline","module":"Control.Effect.Implicit.Free.Pipeline","link":"Control-Effect-Implicit-Free-Pipeline.html#v:genericCoOpHandlerToPipeline"},{"display_html":"<a href=\"#v:contextualHandlerToPipeline\">contextualHandlerToPipeline</a> :: <span class=\"keyword\">forall</span> free w ops1 handler eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:ContextualHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">ContextualHandler</a> w handler) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:GenericPipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">GenericPipeline</a> ops1 handler eff1","name":"contextualHandlerToPipeline","module":"Control.Effect.Implicit.Free.Pipeline","link":"Control-Effect-Implicit-Free-Pipeline.html#v:contextualHandlerToPipeline"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CoOpHandler\">CoOpHandler</a> handler a r eff = <a href=\"#v:CoOpHandler\">CoOpHandler</a> {<ul class=\"subs\"><li><a href=\"#v:handleFreeReturn\">handleFreeReturn</a> :: a -&gt; eff r</li><li><a href=\"#v:handleFreeCoOp\">handleFreeCoOp</a> :: <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> handler (eff r) -&gt; eff r</li></ul>}","name":"CoOpHandler CoOpHandler handleFreeReturn handleFreeCoOp","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:CoOpHandler"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> ops eff. (<a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"../base-4.12.0.0/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> (free ops eff)) =&gt; <a href=\"#t:FreeEff\">FreeEff</a> free <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:freeOps\">freeOps</a> :: <span class=\"keyword\">forall</span> ops eff. (<a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:Operation\" title=\"Control.Effect.Implicit.Base.EffSpec\">Operation</a> ops (free ops eff)</li><li><a href=\"#v:liftFree\">liftFree</a> :: <span class=\"keyword\">forall</span> ops eff a. (<a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; eff a -&gt; free ops eff a</li><li><a href=\"#v:handleFree\">handleFree</a> :: <span class=\"keyword\">forall</span> ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops) =&gt; <a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> ops a r eff -&gt; free ops eff a -&gt; eff r</li></ul>","name":"FreeEff freeOps liftFree handleFree","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:FreeEff"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ChurchMonad\">ChurchMonad</a> ops eff a = <a href=\"#v:ChurchMonad\">ChurchMonad</a> {<ul class=\"subs\"><li><a href=\"#v:runChurchMonad\">runChurchMonad</a> :: <span class=\"keyword\">forall</span> r. <a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> ops a r eff -&gt; eff r</li></ul>}","name":"ChurchMonad ChurchMonad runChurchMonad","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:ChurchMonad"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreeMonad\">FreeMonad</a> ops eff a = <a href=\"#v:FreeMonad\">FreeMonad</a> {<ul class=\"subs\"><li><a href=\"#v:unFreeT\">unFreeT</a> :: <a href=\"../free-5.1/Control-Monad-Trans-Free.html#t:FreeT\" title=\"Control.Monad.Trans.Free\">FreeT</a> (<a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> ops) eff a</li></ul>}","name":"FreeMonad FreeMonad unFreeT","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:FreeMonad"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:GenericCoOpHandler\">GenericCoOpHandler</a> handler eff = <a href=\"#v:GenericCoOpHandler\">GenericCoOpHandler</a> (<span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> handler a a eff)","name":"GenericCoOpHandler GenericCoOpHandler","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:GenericCoOpHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ContextualHandler\">ContextualHandler</a> w handler eff = <a href=\"#v:ContextualHandler\">ContextualHandler</a> {<ul class=\"subs\"><li><a href=\"#v:runContextualHandler\">runContextualHandler</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> handler a (w eff a) eff</li><li><a href=\"#v:extractResult\">extractResult</a> :: <span class=\"keyword\">forall</span> a. w eff a -&gt; eff a</li></ul>}","name":"ContextualHandler ContextualHandler runContextualHandler extractResult","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:ContextualHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FreerCoOpHandler\">FreerCoOpHandler</a> handler a r eff = <a href=\"#v:FreerCoOpHandler\">FreerCoOpHandler</a> {<ul class=\"subs\"><li><a href=\"#v:handleFreerReturn\">handleFreerReturn</a> :: a -&gt; eff r</li><li><a href=\"#v:handleFreerCoOp\">handleFreerCoOp</a> :: <span class=\"keyword\">forall</span> x. <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> handler x -&gt; (x -&gt; eff r) -&gt; eff r</li></ul>}","name":"FreerCoOpHandler FreerCoOpHandler handleFreerReturn handleFreerCoOp","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:FreerCoOpHandler"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free =&gt; <a href=\"#t:FreerEff\">FreerEff</a> free <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:handleFreer\">handleFreer</a> :: <span class=\"keyword\">forall</span> ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops) =&gt; <a href=\"Control-Effect-Implicit-Free.html#t:FreerCoOpHandler\" title=\"Control.Effect.Implicit.Free\">FreerCoOpHandler</a> ops a r eff -&gt; free ops eff a -&gt; eff r</li></ul>","name":"FreerEff handleFreer","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:FreerEff"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreerMonad\">FreerMonad</a> ops eff a = <a href=\"#v:FreerMonad\">FreerMonad</a> {<ul class=\"subs\"><li><a href=\"#v:runFreerMonad\">runFreerMonad</a> :: eff (<a href=\"Control-Effect-Implicit-Free.html#t:FreerF\" title=\"Control.Effect.Implicit.Free\">FreerF</a> ops a (<a href=\"Control-Effect-Implicit-Free.html#t:FreerMonad\" title=\"Control.Effect.Implicit.Free\">FreerMonad</a> ops eff a))</li></ul>}","name":"FreerMonad FreerMonad runFreerMonad","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:FreerMonad"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FreerF\">FreerF</a> ops a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:PureF\">PureF</a> :: <span class=\"keyword\">forall</span> ops a b. a -&gt; <a href=\"Control-Effect-Implicit-Free.html#t:FreerF\" title=\"Control.Effect.Implicit.Free\">FreerF</a> ops a b</li><li><a href=\"#v:FreeF\">FreeF</a> :: <span class=\"keyword\">forall</span> ops a b x. <a href=\"Control-Effect-Implicit-Base-EffSpec.html#t:CoOperation\" title=\"Control.Effect.Implicit.Base.EffSpec\">CoOperation</a> ops x -&gt; (x -&gt; b) -&gt; <a href=\"Control-Effect-Implicit-Free.html#t:FreerF\" title=\"Control.Effect.Implicit.Free\">FreerF</a> ops a b</li></ul>","name":"FreerF FreeF PureF","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#t:FreerF"},{"display_html":"<a href=\"#v:freeLiftEff\">freeLiftEff</a> :: <span class=\"keyword\">forall</span> free ops eff. (<a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-FreeOps.html#t:FreeOps\" title=\"Control.Effect.Implicit.Base.FreeOps\">FreeOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff) =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff (free ops eff)","name":"freeLiftEff","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:freeLiftEff"},{"display_html":"<a href=\"#v:withCoOpHandler\">withCoOpHandler</a> :: <span class=\"keyword\">forall</span> free handler eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> handler a r eff -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> handler (free handler eff) =&gt; free handler eff a) -&gt; eff r","name":"withCoOpHandler","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:withCoOpHandler"},{"display_html":"<a href=\"#v:withCoOpHandlerAndOps\">withCoOpHandlerAndOps</a> :: <span class=\"keyword\">forall</span> free ops handler eff a r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> handler a r eff -&gt; ((<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> handler (free handler eff), <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops (free handler eff)) =&gt; free handler eff a) -&gt; eff r","name":"withCoOpHandlerAndOps","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:withCoOpHandlerAndOps"},{"display_html":"<a href=\"#v:withFreerCoOpHandler\">withFreerCoOpHandler</a> :: <span class=\"keyword\">forall</span> free ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Free.html#t:FreerEff\" title=\"Control.Effect.Implicit.Free\">FreerEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Free.html#t:FreerCoOpHandler\" title=\"Control.Effect.Implicit.Free\">FreerCoOpHandler</a> ops a r eff -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops (free ops eff) =&gt; free ops eff a) -&gt; eff r","name":"withFreerCoOpHandler","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:withFreerCoOpHandler"},{"display_html":"<a href=\"#v:withContextualCoOpHandler\">withContextualCoOpHandler</a> :: <span class=\"keyword\">forall</span> free ops eff a r. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> ops a r eff -&gt; (r -&gt; eff a) -&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops (free ops eff) =&gt; free ops eff a) -&gt; eff a","name":"withContextualCoOpHandler","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:withContextualCoOpHandler"},{"display_html":"<a href=\"#v:coopHandlerToPipeline\">coopHandlerToPipeline</a> :: <span class=\"keyword\">forall</span> free ops1 handler eff1 a b. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Free.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free\">CoOpHandler</a> handler a b) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:Pipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">Pipeline</a> ops1 handler (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> b) eff1 eff1","name":"coopHandlerToPipeline","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:coopHandlerToPipeline"},{"display_html":"<a href=\"#v:genericCoOpHandlerToPipeline\">genericCoOpHandlerToPipeline</a> :: <span class=\"keyword\">forall</span> free ops1 handler eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Free.html#t:GenericCoOpHandler\" title=\"Control.Effect.Implicit.Free\">GenericCoOpHandler</a> handler) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:GenericPipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">GenericPipeline</a> ops1 handler eff1","name":"genericCoOpHandlerToPipeline","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:genericCoOpHandlerToPipeline"},{"display_html":"<a href=\"#v:contextualHandlerToPipeline\">contextualHandlerToPipeline</a> :: <span class=\"keyword\">forall</span> free w ops1 handler eff1. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops1, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> handler, <a href=\"Control-Effect-Implicit-Free.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free\">FreeEff</a> free) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> ops1 (<a href=\"Control-Effect-Implicit-Free.html#t:ContextualHandler\" title=\"Control.Effect.Implicit.Free\">ContextualHandler</a> w handler) eff1 -&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:GenericPipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">GenericPipeline</a> ops1 handler eff1","name":"contextualHandlerToPipeline","module":"Control.Effect.Implicit.Free","link":"Control-Effect-Implicit-Free.html#v:contextualHandlerToPipeline"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DecideEff\">DecideEff</a> s","name":"DecideEff","module":"Control.Effect.Implicit.Ops.Decide","link":"Control-Effect-Implicit-Ops-Decide.html#t:DecideEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DecideOps\">DecideOps</a> s eff = <a href=\"#v:DecideOps\">DecideOps</a> {<ul class=\"subs\"><li><a href=\"#v:decideOp\">decideOp</a> :: eff s</li></ul>}","name":"DecideOps DecideOps decideOp","module":"Control.Effect.Implicit.Ops.Decide","link":"Control-Effect-Implicit-Ops-Decide.html#t:DecideOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DecideCoOp\">DecideCoOp</a> s a = <a href=\"#v:DecideOp\">DecideOp</a> (s -&gt; a)","name":"DecideCoOp DecideOp","module":"Control.Effect.Implicit.Ops.Decide","link":"Control-Effect-Implicit-Ops-Decide.html#t:DecideCoOp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DecideConstraint\">DecideConstraint</a> s eff = ?decideOps :: <a href=\"Control-Effect-Implicit-Ops-Decide.html#t:DecideOps\" title=\"Control.Effect.Implicit.Ops.Decide\">DecideOps</a> s eff","name":"DecideConstraint","module":"Control.Effect.Implicit.Ops.Decide","link":"Control-Effect-Implicit-Ops-Decide.html#t:DecideConstraint"},{"display_html":"<a href=\"#v:decide\">decide</a> :: <span class=\"keyword\">forall</span> a eff. <a href=\"Control-Effect-Implicit-Ops-Decide.html#t:DecideConstraint\" title=\"Control.Effect.Implicit.Ops.Decide\">DecideConstraint</a> a eff =&gt; eff a","name":"decide","module":"Control.Effect.Implicit.Ops.Decide","link":"Control-Effect-Implicit-Ops-Decide.html#v:decide"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EnvEff\">EnvEff</a> e","name":"EnvEff","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#t:EnvEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EnvOps\">EnvOps</a> e eff = <a href=\"#v:EnvOps\">EnvOps</a> {<ul class=\"subs\"><li><a href=\"#v:askOp\">askOp</a> :: eff e</li></ul>}","name":"EnvOps EnvOps askOp","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#t:EnvOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EnvCoOp\">EnvCoOp</a> e r = <a href=\"#v:AskOp\">AskOp</a> (e -&gt; r)","name":"EnvCoOp AskOp","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#t:EnvCoOp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:EnvConstraint\">EnvConstraint</a> e eff = ?envOps :: <a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvOps\" title=\"Control.Effect.Implicit.Ops.Env\">EnvOps</a> e eff","name":"EnvConstraint","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#t:EnvConstraint"},{"display_html":"<a href=\"#v:ask\">ask</a> :: <span class=\"keyword\">forall</span> e eff. <a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvConstraint\" title=\"Control.Effect.Implicit.Ops.Env\">EnvConstraint</a> e eff =&gt; eff e","name":"ask","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#v:ask"},{"display_html":"<a href=\"#v:withEnv\">withEnv</a> :: <span class=\"keyword\">forall</span> r e eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; e -&gt; (<a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvConstraint\" title=\"Control.Effect.Implicit.Ops.Env\">EnvConstraint</a> e eff =&gt; eff r) -&gt; eff r","name":"withEnv","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#v:withEnv"},{"display_html":"<a href=\"#v:mkEnvOps\">mkEnvOps</a> :: <span class=\"keyword\">forall</span> e eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; e -&gt; <a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvOps\" title=\"Control.Effect.Implicit.Ops.Env\">EnvOps</a> e eff","name":"mkEnvOps","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#v:mkEnvOps"},{"display_html":"<a href=\"#v:mkEnvHandler\">mkEnvHandler</a> :: <span class=\"keyword\">forall</span> e eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; e -&gt; <a href=\"Control-Effect-Implicit-Computation-Handler.html#t:BaseHandler\" title=\"Control.Effect.Implicit.Computation.Handler\">BaseHandler</a> (<a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvEff\" title=\"Control.Effect.Implicit.Ops.Env\">EnvEff</a> e) eff","name":"mkEnvHandler","module":"Control.Effect.Implicit.Ops.Env","link":"Control-Effect-Implicit-Ops-Env.html#v:mkEnvHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IoEff\">IoEff</a>","name":"IoEff","module":"Control.Effect.Implicit.Ops.Io","link":"Control-Effect-Implicit-Ops-Io.html#t:IoEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IoOps\">IoOps</a> eff = <a href=\"#v:IoOps\">IoOps</a> {<ul class=\"subs\"><li><a href=\"#v:liftIoOp\">liftIoOp</a> :: <span class=\"keyword\">forall</span> a. <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a -&gt; eff a</li></ul>}","name":"IoOps IoOps liftIoOp","module":"Control.Effect.Implicit.Ops.Io","link":"Control-Effect-Implicit-Ops-Io.html#t:IoOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IoCoOp\">IoCoOp</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:IoCoOp\">IoCoOp</a> :: <span class=\"keyword\">forall</span> x a. <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> x -&gt; (x -&gt; a) -&gt; <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoCoOp\" title=\"Control.Effect.Implicit.Ops.Io\">IoCoOp</a> a</li></ul>","name":"IoCoOp IoCoOp","module":"Control.Effect.Implicit.Ops.Io","link":"Control-Effect-Implicit-Ops-Io.html#t:IoCoOp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IoConstraint\">IoConstraint</a> eff = ?ioOps :: <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoOps\" title=\"Control.Effect.Implicit.Ops.Io\">IoOps</a> eff","name":"IoConstraint","module":"Control.Effect.Implicit.Ops.Io","link":"Control-Effect-Implicit-Ops-Io.html#t:IoConstraint"},{"display_html":"<a href=\"#v:liftIo\">liftIo</a> :: <span class=\"keyword\">forall</span> a eff. <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoConstraint\" title=\"Control.Effect.Implicit.Ops.Io\">IoConstraint</a> eff =&gt; <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a -&gt; eff a","name":"liftIo","module":"Control.Effect.Implicit.Ops.Io","link":"Control-Effect-Implicit-Ops-Io.html#v:liftIo"},{"display_html":"<a href=\"#v:ioOps\">ioOps</a> :: <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoOps\" title=\"Control.Effect.Implicit.Ops.Io\">IoOps</a> <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"ioOps","module":"Control.Effect.Implicit.Ops.Io","link":"Control-Effect-Implicit-Ops-Io.html#v:ioOps"},{"display_html":"<a href=\"#v:ioHandler\">ioHandler</a> :: <a href=\"Control-Effect-Implicit-Computation-Handler.html#t:BaseHandler\" title=\"Control.Effect.Implicit.Computation.Handler\">BaseHandler</a> <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoEff\" title=\"Control.Effect.Implicit.Ops.Io\">IoEff</a> <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a>","name":"ioHandler","module":"Control.Effect.Implicit.Ops.Io","link":"Control-Effect-Implicit-Ops-Io.html#v:ioHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ExceptionEff\">ExceptionEff</a> e","name":"ExceptionEff","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ExceptionOps\">ExceptionOps</a> e eff = <a href=\"#v:ExceptionOps\">ExceptionOps</a> {<ul class=\"subs\"><li><a href=\"#v:raiseOp\">raiseOp</a> :: e -&gt; eff <a href=\"../base-4.12.0.0/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a></li></ul>}","name":"ExceptionOps ExceptionOps raiseOp","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ExceptionCoOp\">ExceptionCoOp</a> e r = <a href=\"#v:RaiseOp\">RaiseOp</a> e","name":"ExceptionCoOp RaiseOp","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionCoOp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ExceptionConstraint\">ExceptionConstraint</a> e eff = ?exceptionOps :: <a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionOps\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionOps</a> e eff","name":"ExceptionConstraint","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionConstraint"},{"display_html":"<a href=\"#v:raise\">raise</a> :: <span class=\"keyword\">forall</span> e a eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionConstraint\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionConstraint</a> e eff) =&gt; e -&gt; eff a","name":"raise","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:raise"},{"display_html":"<a href=\"#v:mkExceptionCoOpHandler\">mkExceptionCoOpHandler</a> :: <span class=\"keyword\">forall</span> eff e a. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; (e -&gt; eff a) -&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) a a eff","name":"mkExceptionCoOpHandler","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:mkExceptionCoOpHandler"},{"display_html":"<a href=\"#v:exceptionToEitherHandler\">exceptionToEitherHandler</a> :: <span class=\"keyword\">forall</span> eff e a. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:CoOpHandler\" title=\"Control.Effect.Implicit.Free.FreeEff\">CoOpHandler</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) a (<a href=\"../base-4.12.0.0/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a) eff","name":"exceptionToEitherHandler","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:exceptionToEitherHandler"},{"display_html":"<a href=\"#v:tryIo\">tryIo</a> :: <span class=\"keyword\">forall</span> eff e a. (<a href=\"../base-4.12.0.0/Control-Exception-Base.html#t:Exception\" title=\"Control.Exception.Base\">Exception</a> e, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> (<a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoEff\" title=\"Control.Effect.Implicit.Ops.Io\">IoEff</a> <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> <a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) eff) =&gt; <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a -&gt; eff a","name":"tryIo","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:tryIo"},{"display_html":"<a href=\"#v:tryIoHandler\">tryIoHandler</a> :: <span class=\"keyword\">forall</span> e eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"../base-4.12.0.0/Control-Exception-Base.html#t:Exception\" title=\"Control.Exception.Base\">Exception</a> e) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoEff\" title=\"Control.Effect.Implicit.Ops.Io\">IoEff</a>) <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoEff\" title=\"Control.Effect.Implicit.Ops.Io\">IoEff</a> eff","name":"tryIoHandler","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:tryIoHandler"},{"display_html":"<a href=\"#v:try\">try</a> :: <span class=\"keyword\">forall</span> free eff e a. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free) =&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) (free (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) eff) =&gt; free (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) eff a) -&gt; (e -&gt; eff a) -&gt; eff a","name":"try","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:try"},{"display_html":"<a href=\"#v:tryFinally\">tryFinally</a> :: <span class=\"keyword\">forall</span> free eff e a. (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) eff) =&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) (free (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) eff) =&gt; free (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e) eff a) -&gt; (() -&gt; eff ()) -&gt; eff a","name":"tryFinally","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:tryFinally"},{"display_html":"<a href=\"#v:tryComp\">tryComp</a> :: <span class=\"keyword\">forall</span> free eff ops e a. (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) eff -&gt; (e -&gt; eff a) -&gt; eff a","name":"tryComp","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:tryComp"},{"display_html":"<a href=\"#v:bracketComp\">bracketComp</a> :: <span class=\"keyword\">forall</span> free eff ops e a b. (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> ops eff) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> a) eff -&gt; (a -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> ()) eff) -&gt; (a -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> b) eff) -&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Computation\" title=\"Control.Effect.Implicit.Computation.Computation\">Computation</a> (<a href=\"Control-Effect-Implicit-Ops-Exception.html#t:ExceptionEff\" title=\"Control.Effect.Implicit.Ops.Exception\">ExceptionEff</a> e <a href=\"Control-Effect-Implicit-Base-Union.html#t:-8746-\" title=\"Control.Effect.Implicit.Base.Union\">&#8746;</a> ops) (<a href=\"Control-Effect-Implicit-Computation-Value.html#t:Return\" title=\"Control.Effect.Implicit.Computation.Value\">Return</a> b) eff","name":"bracketComp","module":"Control.Effect.Implicit.Ops.Exception","link":"Control-Effect-Implicit-Ops-Exception.html#v:bracketComp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AsyncEff\">AsyncEff</a> (t :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"AsyncEff","module":"Control.Effect.Implicit.Ops.Async","link":"Control-Effect-Implicit-Ops-Async.html#t:AsyncEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AsyncOps\">AsyncOps</a> t eff = <a href=\"#v:AsyncOps\">AsyncOps</a> {<ul class=\"subs\"><li><a href=\"#v:awaitOp\">awaitOp</a> :: <span class=\"keyword\">forall</span> a. t a -&gt; eff a</li><li><a href=\"#v:awaitAllOp\">awaitAllOp</a> :: <span class=\"keyword\">forall</span> a. [t a] -&gt; eff [a]</li></ul>}","name":"AsyncOps AsyncOps awaitAllOp awaitOp","module":"Control.Effect.Implicit.Ops.Async","link":"Control-Effect-Implicit-Ops-Async.html#t:AsyncOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AsyncCoOp\">AsyncCoOp</a> t r <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:AwaitOp\">AwaitOp</a> :: <span class=\"keyword\">forall</span> t r a. t a -&gt; (a -&gt; r) -&gt; <a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncCoOp\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncCoOp</a> t r</li><li><a href=\"#v:AwaitAllOp\">AwaitAllOp</a> :: <span class=\"keyword\">forall</span> t r a. [t a] -&gt; ([a] -&gt; r) -&gt; <a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncCoOp\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncCoOp</a> t r</li></ul>","name":"AsyncCoOp AwaitAllOp AwaitOp","module":"Control.Effect.Implicit.Ops.Async","link":"Control-Effect-Implicit-Ops-Async.html#t:AsyncCoOp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:AsyncConstraint\">AsyncConstraint</a> t eff = ?asyncOps :: <a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncOps\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncOps</a> t eff","name":"AsyncConstraint","module":"Control.Effect.Implicit.Ops.Async","link":"Control-Effect-Implicit-Ops-Async.html#t:AsyncConstraint"},{"display_html":"<a href=\"#v:await\">await</a> :: <span class=\"keyword\">forall</span> a t eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncConstraint\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncConstraint</a> t eff) =&gt; t a -&gt; eff a","name":"await","module":"Control.Effect.Implicit.Ops.Async","link":"Control-Effect-Implicit-Ops-Async.html#v:await"},{"display_html":"<a href=\"#v:awaitAll\">awaitAll</a> :: <span class=\"keyword\">forall</span> a t eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncConstraint\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncConstraint</a> t eff) =&gt; [t a] -&gt; eff [a]","name":"awaitAll","module":"Control.Effect.Implicit.Ops.Async","link":"Control-Effect-Implicit-Ops-Async.html#v:awaitAll"},{"display_html":"<a href=\"#v:handleAsync\">handleAsync</a> :: <span class=\"keyword\">forall</span> free eff a t. (<a href=\"Control-Effect-Implicit-Free-FreeEff.html#t:FreeEff\" title=\"Control.Effect.Implicit.Free.FreeEff\">FreeEff</a> free, <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoEff\" title=\"Control.Effect.Implicit.Ops.Io\">IoEff</a> eff) =&gt; (<span class=\"keyword\">forall</span> x. <a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncConstraint\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncConstraint</a> t (free (<a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncEff\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncEff</a> t) <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a>) =&gt; t x -&gt; free (<a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncEff\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncEff</a> t) <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> x) -&gt; (<a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncConstraint\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncConstraint</a> t (free (<a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncEff\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncEff</a> t) eff) =&gt; free (<a href=\"Control-Effect-Implicit-Ops-Async.html#t:AsyncEff\" title=\"Control.Effect.Implicit.Ops.Async\">AsyncEff</a> t) eff a) -&gt; eff a","name":"handleAsync","module":"Control.Effect.Implicit.Ops.Async","link":"Control-Effect-Implicit-Ops-Async.html#v:handleAsync"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StateEff\">StateEff</a> s","name":"StateEff","module":"Control.Effect.Implicit.Ops.State","link":"Control-Effect-Implicit-Ops-State.html#t:StateEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StateOps\">StateOps</a> s eff = <a href=\"#v:StateOps\">StateOps</a> {<ul class=\"subs\"><li><a href=\"#v:getOp\">getOp</a> :: eff s</li><li><a href=\"#v:putOp\">putOp</a> :: s -&gt; eff ()</li></ul>}","name":"StateOps StateOps getOp putOp","module":"Control.Effect.Implicit.Ops.State","link":"Control-Effect-Implicit-Ops-State.html#t:StateOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StateCoOp\">StateCoOp</a> s a<ul class=\"subs\"><li>= <a href=\"#v:GetOp\">GetOp</a> (s -&gt; a)</li><li>| <a href=\"#v:PutOp\">PutOp</a> s (() -&gt; a)</li></ul>","name":"StateCoOp GetOp PutOp","module":"Control.Effect.Implicit.Ops.State","link":"Control-Effect-Implicit-Ops-State.html#t:StateCoOp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StateConstraint\">StateConstraint</a> s eff = ?stateOps :: <a href=\"Control-Effect-Implicit-Ops-State.html#t:StateOps\" title=\"Control.Effect.Implicit.Ops.State\">StateOps</a> s eff","name":"StateConstraint","module":"Control.Effect.Implicit.Ops.State","link":"Control-Effect-Implicit-Ops-State.html#t:StateConstraint"},{"display_html":"<a href=\"#v:get\">get</a> :: <span class=\"keyword\">forall</span> a eff. <a href=\"Control-Effect-Implicit-Ops-State.html#t:StateConstraint\" title=\"Control.Effect.Implicit.Ops.State\">StateConstraint</a> a eff =&gt; eff a","name":"get","module":"Control.Effect.Implicit.Ops.State","link":"Control-Effect-Implicit-Ops-State.html#v:get"},{"display_html":"<a href=\"#v:put\">put</a> :: <span class=\"keyword\">forall</span> a eff. <a href=\"Control-Effect-Implicit-Ops-State.html#t:StateConstraint\" title=\"Control.Effect.Implicit.Ops.State\">StateConstraint</a> a eff =&gt; a -&gt; eff ()","name":"put","module":"Control.Effect.Implicit.Ops.State","link":"Control-Effect-Implicit-Ops-State.html#v:put"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LogEff\">LogEff</a> l","name":"LogEff","module":"Control.Effect.Implicit.Ops.Log","link":"Control-Effect-Implicit-Ops-Log.html#t:LogEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LogOps\">LogOps</a> l eff = <a href=\"#v:LogOps\">LogOps</a> {<ul class=\"subs\"><li><a href=\"#v:logOp\">logOp</a> :: l -&gt; eff ()</li></ul>}","name":"LogOps LogOps logOp","module":"Control.Effect.Implicit.Ops.Log","link":"Control-Effect-Implicit-Ops-Log.html#t:LogOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LogCoOp\">LogCoOp</a> l r = <a href=\"#v:LogOp\">LogOp</a> l (() -&gt; r)","name":"LogCoOp LogOp","module":"Control.Effect.Implicit.Ops.Log","link":"Control-Effect-Implicit-Ops-Log.html#t:LogCoOp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LogConstraint\">LogConstraint</a> l eff = ?logOps :: <a href=\"Control-Effect-Implicit-Ops-Log.html#t:LogOps\" title=\"Control.Effect.Implicit.Ops.Log\">LogOps</a> l eff","name":"LogConstraint","module":"Control.Effect.Implicit.Ops.Log","link":"Control-Effect-Implicit-Ops-Log.html#t:LogConstraint"},{"display_html":"<a href=\"#v:log\">log</a> :: <span class=\"keyword\">forall</span> l eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"Control-Effect-Implicit-Ops-Log.html#t:LogConstraint\" title=\"Control.Effect.Implicit.Ops.Log\">LogConstraint</a> l eff) =&gt; l -&gt; eff ()","name":"log","module":"Control.Effect.Implicit.Ops.Log","link":"Control-Effect-Implicit-Ops-Log.html#v:log"},{"display_html":"<a href=\"#v:stateLoggerHandler\">stateLoggerHandler</a> :: <span class=\"keyword\">forall</span> l eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> (<a href=\"Control-Effect-Implicit-Ops-State.html#t:StateEff\" title=\"Control.Effect.Implicit.Ops.State\">StateEff</a> [l]) (<a href=\"Control-Effect-Implicit-Ops-Log.html#t:LogEff\" title=\"Control.Effect.Implicit.Ops.Log\">LogEff</a> l) eff","name":"stateLoggerHandler","module":"Control.Effect.Implicit.Ops.Log","link":"Control-Effect-Implicit-Ops-Log.html#v:stateLoggerHandler"},{"display_html":"<a href=\"#v:printLoggerHandler\">printLoggerHandler</a> :: <span class=\"keyword\">forall</span> a eff. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff, <a href=\"../base-4.12.0.0/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a) =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> <a href=\"Control-Effect-Implicit-Ops-Io.html#t:IoEff\" title=\"Control.Effect.Implicit.Ops.Io\">IoEff</a> (<a href=\"Control-Effect-Implicit-Ops-Log.html#t:LogEff\" title=\"Control.Effect.Implicit.Ops.Log\">LogEff</a> a) eff","name":"printLoggerHandler","module":"Control.Effect.Implicit.Ops.Log","link":"Control-Effect-Implicit-Ops-Log.html#v:printLoggerHandler"},{"display_html":"module <a href=\"Control-Effect-Implicit-Ops-Env.html\">Control.Effect.Implicit.Ops.Env</a>","name":"","module":"Control.Effect.Implicit.Ops","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Ops-Io.html\">Control.Effect.Implicit.Ops.Io</a>","name":"","module":"Control.Effect.Implicit.Ops","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Ops-State.html\">Control.Effect.Implicit.Ops.State</a>","name":"","module":"Control.Effect.Implicit.Ops","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Ops-Decide.html\">Control.Effect.Implicit.Ops.Decide</a>","name":"","module":"Control.Effect.Implicit.Ops","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Ops-Exception.html\">Control.Effect.Implicit.Ops.Exception</a>","name":"","module":"Control.Effect.Implicit.Ops","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Ops-Log.html\">Control.Effect.Implicit.Ops.Log</a>","name":"","module":"Control.Effect.Implicit.Ops","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Ops-Async.html\">Control.Effect.Implicit.Ops.Async</a>","name":"","module":"Control.Effect.Implicit.Ops","link":""},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TaggedEff\">TaggedEff</a> l ops","name":"TaggedEff","module":"Control.Effect.Implicit.TaggedOps.TaggedEff","link":"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TaggedOps\">TaggedOps</a> :: <span class=\"keyword\">forall</span> k. k -&gt; ((<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TaggedOps\">TaggedOps</a> :: <span class=\"keyword\">forall</span> l ops eff. ops eff -&gt; <a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedOps\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedOps</a> l ops eff</li></ul>","name":"TaggedOps TaggedOps","module":"Control.Effect.Implicit.TaggedOps.TaggedEff","link":"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TaggedCoOp\">TaggedCoOp</a> :: <span class=\"keyword\">forall</span> k. k -&gt; (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TaggedCoOp\">TaggedCoOp</a> :: <span class=\"keyword\">forall</span> l coop r. coop r -&gt; <a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedCoOp\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedCoOp</a> l coop r</li></ul>","name":"TaggedCoOp TaggedCoOp","module":"Control.Effect.Implicit.TaggedOps.TaggedEff","link":"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedCoOp"},{"display_html":"<a href=\"#v:untagOps\">untagOps</a> :: <span class=\"keyword\">forall</span> l ops eff. <a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedOps\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedOps</a> l ops eff -&gt; ops eff","name":"untagOps","module":"Control.Effect.Implicit.TaggedOps.TaggedEff","link":"Control-Effect-Implicit-TaggedOps-TaggedEff.html#v:untagOps"},{"display_html":"<a href=\"#v:untagCoOp\">untagCoOp</a> :: <span class=\"keyword\">forall</span> l coop r. <a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedCoOp\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedCoOp</a> l coop r -&gt; coop r","name":"untagCoOp","module":"Control.Effect.Implicit.TaggedOps.TaggedEff","link":"Control-Effect-Implicit-TaggedOps-TaggedEff.html#v:untagCoOp"},{"display_html":"<a href=\"#v:withTag\">withTag</a> :: <span class=\"keyword\">forall</span> l ops eff r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> (<a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedEff\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedEff</a> l ops), <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> (<a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedEff\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedEff</a> l ops) eff) =&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops eff =&gt; r) -&gt; r","name":"withTag","module":"Control.Effect.Implicit.TaggedOps.TaggedEff","link":"Control-Effect-Implicit-TaggedOps-TaggedEff.html#v:withTag"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TaggedEnvEff\">TaggedEnvEff</a> tag e = <a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedEff\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedEff</a> tag (<a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvEff\" title=\"Control.Effect.Implicit.Ops.Env\">EnvEff</a> e)","name":"TaggedEnvEff","module":"Control.Effect.Implicit.TaggedOps.Env","link":"Control-Effect-Implicit-TaggedOps-Env.html#t:TaggedEnvEff"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TaggedEnvOps\">TaggedEnvOps</a> tag e eff = <a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedOps\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedOps</a> tag (<a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvOps\" title=\"Control.Effect.Implicit.Ops.Env\">EnvOps</a> e) eff","name":"TaggedEnvOps","module":"Control.Effect.Implicit.TaggedOps.Env","link":"Control-Effect-Implicit-TaggedOps-Env.html#t:TaggedEnvOps"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TaggedEnvCoOp\">TaggedEnvCoOp</a> tag e r = <a href=\"Control-Effect-Implicit-TaggedOps-TaggedEff.html#t:TaggedCoOp\" title=\"Control.Effect.Implicit.TaggedOps.TaggedEff\">TaggedCoOp</a> tag (<a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvCoOp\" title=\"Control.Effect.Implicit.Ops.Env\">EnvCoOp</a> e) r","name":"TaggedEnvCoOp","module":"Control.Effect.Implicit.TaggedOps.Env","link":"Control-Effect-Implicit-TaggedOps-Env.html#t:TaggedEnvCoOp"},{"display_html":"<a href=\"#v:askTag\">askTag</a> :: <span class=\"keyword\">forall</span> tag e eff. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> (<a href=\"Control-Effect-Implicit-TaggedOps-Env.html#t:TaggedEnvEff\" title=\"Control.Effect.Implicit.TaggedOps.Env\">TaggedEnvEff</a> tag e), <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> (<a href=\"Control-Effect-Implicit-TaggedOps-Env.html#t:TaggedEnvEff\" title=\"Control.Effect.Implicit.TaggedOps.Env\">TaggedEnvEff</a> tag e) eff) =&gt; eff e","name":"askTag","module":"Control.Effect.Implicit.TaggedOps.Env","link":"Control-Effect-Implicit-TaggedOps-Env.html#v:askTag"},{"display_html":"<a href=\"#v:mkTaggedEnvOps\">mkTaggedEnvOps</a> :: <span class=\"keyword\">forall</span> tag e eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; e -&gt; <a href=\"Control-Effect-Implicit-TaggedOps-Env.html#t:TaggedEnvOps\" title=\"Control.Effect.Implicit.TaggedOps.Env\">TaggedEnvOps</a> tag e eff","name":"mkTaggedEnvOps","module":"Control.Effect.Implicit.TaggedOps.Env","link":"Control-Effect-Implicit-TaggedOps-Env.html#v:mkTaggedEnvOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TaggedEff\">TaggedEff</a> l ops","name":"TaggedEff","module":"Control.Effect.Implicit.TaggedOps","link":"Control-Effect-Implicit-TaggedOps.html#t:TaggedEff"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TaggedOps\">TaggedOps</a> :: <span class=\"keyword\">forall</span> k. k -&gt; ((<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TaggedOps\">TaggedOps</a> :: <span class=\"keyword\">forall</span> l ops eff. ops eff -&gt; <a href=\"Control-Effect-Implicit-TaggedOps.html#t:TaggedOps\" title=\"Control.Effect.Implicit.TaggedOps\">TaggedOps</a> l ops eff</li></ul>","name":"TaggedOps TaggedOps","module":"Control.Effect.Implicit.TaggedOps","link":"Control-Effect-Implicit-TaggedOps.html#t:TaggedOps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TaggedCoOp\">TaggedCoOp</a> :: <span class=\"keyword\">forall</span> k. k -&gt; (<a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TaggedCoOp\">TaggedCoOp</a> :: <span class=\"keyword\">forall</span> l coop r. coop r -&gt; <a href=\"Control-Effect-Implicit-TaggedOps.html#t:TaggedCoOp\" title=\"Control.Effect.Implicit.TaggedOps\">TaggedCoOp</a> l coop r</li></ul>","name":"TaggedCoOp TaggedCoOp","module":"Control.Effect.Implicit.TaggedOps","link":"Control-Effect-Implicit-TaggedOps.html#t:TaggedCoOp"},{"display_html":"<a href=\"#v:untagOps\">untagOps</a> :: <span class=\"keyword\">forall</span> l ops eff. <a href=\"Control-Effect-Implicit-TaggedOps.html#t:TaggedOps\" title=\"Control.Effect.Implicit.TaggedOps\">TaggedOps</a> l ops eff -&gt; ops eff","name":"untagOps","module":"Control.Effect.Implicit.TaggedOps","link":"Control-Effect-Implicit-TaggedOps.html#v:untagOps"},{"display_html":"<a href=\"#v:untagCoOp\">untagCoOp</a> :: <span class=\"keyword\">forall</span> l coop r. <a href=\"Control-Effect-Implicit-TaggedOps.html#t:TaggedCoOp\" title=\"Control.Effect.Implicit.TaggedOps\">TaggedCoOp</a> l coop r -&gt; coop r","name":"untagCoOp","module":"Control.Effect.Implicit.TaggedOps","link":"Control-Effect-Implicit-TaggedOps.html#v:untagCoOp"},{"display_html":"<a href=\"#v:withTag\">withTag</a> :: <span class=\"keyword\">forall</span> l ops eff r. (<a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> ops, <a href=\"Control-Effect-Implicit-Base-EffOps.html#t:EffOps\" title=\"Control.Effect.Implicit.Base.EffOps\">EffOps</a> (<a href=\"Control-Effect-Implicit-TaggedOps.html#t:TaggedEff\" title=\"Control.Effect.Implicit.TaggedOps\">TaggedEff</a> l ops), <a href=\"Control-Effect-Implicit-Base-Implicit.html#t:EffConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">EffConstraint</a> (<a href=\"Control-Effect-Implicit-TaggedOps.html#t:TaggedEff\" title=\"Control.Effect.Implicit.TaggedOps\">TaggedEff</a> l ops) eff) =&gt; (<a href=\"Control-Effect-Implicit-Base-Implicit.html#t:OpsConstraint\" title=\"Control.Effect.Implicit.Base.Implicit\">OpsConstraint</a> ops eff =&gt; r) -&gt; r","name":"withTag","module":"Control.Effect.Implicit.TaggedOps","link":"Control-Effect-Implicit-TaggedOps.html#v:withTag"},{"display_html":"module <a href=\"Control-Effect-Implicit-TaggedOps-Env.html\">Control.Effect.Implicit.TaggedOps.Env</a>","name":"","module":"Control.Effect.Implicit.TaggedOps","link":""},{"display_html":"<a href=\"#v:liftReaderT\">liftReaderT</a> :: <span class=\"keyword\">forall</span> a eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff (<a href=\"../mtl-2.2.2/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> a eff)","name":"liftReaderT","module":"Control.Effect.Implicit.Transform.Reader","link":"Control-Effect-Implicit-Transform-Reader.html#v:liftReaderT"},{"display_html":"<a href=\"#v:readerTOps\">readerTOps</a> :: <span class=\"keyword\">forall</span> a eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvOps\" title=\"Control.Effect.Implicit.Ops.Env\">EnvOps</a> a (<a href=\"../mtl-2.2.2/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> a eff)","name":"readerTOps","module":"Control.Effect.Implicit.Transform.Reader","link":"Control-Effect-Implicit-Transform-Reader.html#v:readerTOps"},{"display_html":"<a href=\"#v:readerTHandler\">readerTHandler</a> :: <span class=\"keyword\">forall</span> a eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> <a href=\"Control-Effect-Implicit-Base-NoEff.html#t:NoEff\" title=\"Control.Effect.Implicit.Base.NoEff\">NoEff</a> (<a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvEff\" title=\"Control.Effect.Implicit.Ops.Env\">EnvEff</a> a) (<a href=\"../mtl-2.2.2/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> a eff)","name":"readerTHandler","module":"Control.Effect.Implicit.Transform.Reader","link":"Control-Effect-Implicit-Transform-Reader.html#v:readerTHandler"},{"display_html":"<a href=\"#v:liftStateT\">liftStateT</a> :: <span class=\"keyword\">forall</span> s eff. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Base-LiftEff.html#t:LiftEff\" title=\"Control.Effect.Implicit.Base.LiftEff\">LiftEff</a> eff (<a href=\"../mtl-2.2.2/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s eff)","name":"liftStateT","module":"Control.Effect.Implicit.Transform.State","link":"Control-Effect-Implicit-Transform-State.html#v:liftStateT"},{"display_html":"<a href=\"#v:stateTOps\">stateTOps</a> :: <span class=\"keyword\">forall</span> eff s. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Ops-State.html#t:StateOps\" title=\"Control.Effect.Implicit.Ops.State\">StateOps</a> s (<a href=\"../mtl-2.2.2/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s eff)","name":"stateTOps","module":"Control.Effect.Implicit.Transform.State","link":"Control-Effect-Implicit-Transform-State.html#v:stateTOps"},{"display_html":"<a href=\"#v:stateTHandler\">stateTHandler</a> :: <span class=\"keyword\">forall</span> eff s. <a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff =&gt; <a href=\"Control-Effect-Implicit-Computation-Computation.html#t:Handler\" title=\"Control.Effect.Implicit.Computation.Computation\">Handler</a> <a href=\"Control-Effect-Implicit-Base-NoEff.html#t:NoEff\" title=\"Control.Effect.Implicit.Base.NoEff\">NoEff</a> (<a href=\"Control-Effect-Implicit-Ops-State.html#t:StateEff\" title=\"Control.Effect.Implicit.Ops.State\">StateEff</a> s) (<a href=\"../mtl-2.2.2/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s eff)","name":"stateTHandler","module":"Control.Effect.Implicit.Transform.State","link":"Control-Effect-Implicit-Transform-State.html#v:stateTHandler"},{"display_html":"<a href=\"#v:stateTPipeline\">stateTPipeline</a> :: <span class=\"keyword\">forall</span> s eff1 comp. (<a href=\"Control-Effect-Implicit-Base-Effect.html#t:Effect\" title=\"Control.Effect.Implicit.Base.Effect\">Effect</a> eff1, <a href=\"Control-Effect-Implicit-Base-EffFunctor.html#t:EffFunctor\" title=\"Control.Effect.Implicit.Base.EffFunctor\">EffFunctor</a> comp) =&gt; <a href=\"Control-Effect-Implicit-Computation-Pipeline.html#t:SimplePipeline\" title=\"Control.Effect.Implicit.Computation.Pipeline\">SimplePipeline</a> (<a href=\"Control-Effect-Implicit-Ops-Env.html#t:EnvEff\" title=\"Control.Effect.Implicit.Ops.Env\">EnvEff</a> s) (<a href=\"Control-Effect-Implicit-Ops-State.html#t:StateEff\" title=\"Control.Effect.Implicit.Ops.State\">StateEff</a> s) comp eff1","name":"stateTPipeline","module":"Control.Effect.Implicit.Transform.State","link":"Control-Effect-Implicit-Transform-State.html#v:stateTPipeline"},{"display_html":"module <a href=\"Control-Effect-Implicit-Transform-Reader.html\">Control.Effect.Implicit.Transform.Reader</a>","name":"","module":"Control.Effect.Implicit.Transform","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Transform-State.html\">Control.Effect.Implicit.Transform.State</a>","name":"","module":"Control.Effect.Implicit.Transform","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Base.html\">Control.Effect.Implicit.Base</a>","name":"","module":"Control.Effect.Implicit","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Computation.html\">Control.Effect.Implicit.Computation</a>","name":"","module":"Control.Effect.Implicit","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Free.html\">Control.Effect.Implicit.Free</a>","name":"","module":"Control.Effect.Implicit","link":""},{"display_html":"module <a href=\"Control-Effect-Implicit-Transform.html\">Control.Effect.Implicit.Transform</a>","name":"","module":"Control.Effect.Implicit","link":""},{"display_html":"<a href=\"#v:version\">version</a> :: <a href=\"../base-4.12.0.0/Data-Version.html#t:Version\" title=\"Data.Version\">Version</a>","name":"version","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:version"},{"display_html":"<a href=\"#v:getBinDir\">getBinDir</a> :: <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getBinDir","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:getBinDir"},{"display_html":"<a href=\"#v:getLibDir\">getLibDir</a> :: <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getLibDir","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:getLibDir"},{"display_html":"<a href=\"#v:getDynLibDir\">getDynLibDir</a> :: <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getDynLibDir","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:getDynLibDir"},{"display_html":"<a href=\"#v:getDataDir\">getDataDir</a> :: <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getDataDir","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:getDataDir"},{"display_html":"<a href=\"#v:getLibexecDir\">getLibexecDir</a> :: <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getLibexecDir","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:getLibexecDir"},{"display_html":"<a href=\"#v:getDataFileName\">getDataFileName</a> :: <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getDataFileName","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:getDataFileName"},{"display_html":"<a href=\"#v:getSysconfDir\">getSysconfDir</a> :: <a href=\"../base-4.12.0.0/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"../base-4.12.0.0/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getSysconfDir","module":"Paths_implicit_effects","link":"Paths_implicit_effects.html#v:getSysconfDir"}]